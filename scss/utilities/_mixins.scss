// @mixin rainbow-colors($map){
//     @each $num, $color in $map {
//       &.rainbow__line--#{$num}{
//       background-color: $color;
//     }
//   }
// }
// //button background color
// // @mixin btn-bg-colors($map){
//   @each $theme, $color in $map {
//     &--#{$theme}{
//     background-color: $color;
//   }
// }
// }


// //media queries
//   @mixin mq($break) {
//  @if $break == "small" {
//     @media(min-width:$brkpoint-s) and (max-width:$brkpoint-m) {
//       @content;
//       }
//     }
//   @else if $break == "medium" {
//     @media(min-width: $brkpoint-m) {
//       @content;
// }
// }
//   @else if $break == "large" {
//    @media(min-width:$brkpoint-l) {
//       @content;
//     }
//   }
//   @else {
//   @error "Whoops! No value could be retrieved for '#{$break}' ";
// }
// }



//   //elements and modifiers
//   @mixin e($element){
//       &__#{$element} {
//         @content;
//   }
// }

// @mixin m($modifier){
//     &--#{$modifier} {
//     @content;
//   }
// }

// //grid columns
// @mixin g-columns {
//   @for $i from 1 through $g-col-count {
//   $context: g-context($g-col-width, $g-col-count, $g-gutter-width) !global;
//   $target: ($g-col-width * $i) + ($g-gutter-width * ($i - 1) );

//   &--#{$i}{
//   width: percentage($target / $context);
// }
// }
// }


// //flexbox
// @mixin flexy($disp:flex, $dir: null, $wrap: null, $just: null) {
//     display: $disp;
//     flex-direction: $dir;
//     flex-wrap: $wrap;
//     justify-content: $just;
// }